require 'autotest/redgreen'
require 'autotest/timestamp'

module Autotest::Notify
  def self.notify(title, message, priority)
    icon = (priority == 'critical') ? 'dialog-error' : 'dialog-information'
    system "notify-send -u #{priority} -t 3000 -i #{icon} '#{title}' '#{message.inspect}'"
  end

  Autotest.add_hook :ran_command do |at|
    last = at.results.last
    green = case last
            when /^.* (\d+) failures, (\d+) errors$/   # Test::Unit
              ($1 == "0" and $2 == "0")
            when /^\d+\s+examples?,\s+(\d+)\s+failure/ # RSpec
              ($1 == "0")
            when nil
              return at.reset
            end

    title    = green ? "Tests passed" : "Tests failed"
    message  = green ? "OK"  : last.chomp
    priority = green ? "low" : "critical"
    notify(title, message, priority)
  end
end
