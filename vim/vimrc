" Options globales {{{

syntax on
filetype on
filetype plugin indent on
if has("gui_running")
	colo bluetiful
	set bg=dark
	set gfn=Inconsolata\ for\ Powerline\ 13
	set gcr=a:blinkon0
	set go=acegit
	" Fix borders of fullscreen GUI
	" let s:border = synIDattr(synIDtrans(hlID('Normal')), 'bg', 'gui')
	" exe 'silent !echo ''style "vimfix" { bg[NORMAL] = "' . escape(s:border, '#') . '" }'''.
	"             \' > ~/.gtkrc.mine'
	" exe 'silent !echo ''widget "vim-main-window.*GtkForm" style "vimfix"'''.
	"             \' >> ~/.gtkrc.mine'
else
	colo base16
	set bg=dark
endif

set autoindent
set autoread            " Auto-reload modified files (with no local changes)
set backspace=indent,eol,start
set complete-=i
set completeopt=menuone
set dir-=.              " Don't put temporary files in current directory
set encoding=utf-8
set fileformat=unix
set formatoptions+=j    " Delete comment character when joining commented lines
set grepformat=%f:%l:%c:%m
set grepprg=ag
set incsearch
set laststatus=2        " Always show the statusbar
set lazyredraw
set list
set listchars=tab:\ \ ,nbsp:␣,trail:⋅
set noequalalways
set noexpandtab
set nohlsearch
set noignorecase
set nojoinspaces
set nospell
set nostartofline
set nowrap
set nowrapscan
set nrformats-=octal
set omnifunc=syntaxcomplete#Complete
set pastetoggle=<F11>
set ruler
set scrolloff=3
set shiftwidth=0
set shortmess=atI
set showcmd
set showmatch
set sidescrolloff=5
set smartindent
set smarttab
set spelllang=fr,en
set spellsuggest=best,3
set tabstop=4
set textwidth=0
set title
set ttimeout
set ttimeoutlen=100
set virtualedit=block
set wildignore+=*.o,*.so,*.a,*.pyc,*.8
set wildmenu


" }}}
" Mappings {{{

nnoremap <F1> K
nnoremap <F8> :set spell!<CR>


" Don't make a # force column zero.
inoremap # X<BS>#

" Ctrl-+ to increase font size
noremap <C-kplus> :let &guifont=substitute(&guifont, '\d\+', '\=eval(submatch(0)+1)', '')<CR>
noremap <C-kminus> :let &guifont=substitute(&guifont, '\d\+', '\=eval(submatch(0)-1)', '')<CR>

" Navigate between views with Ctrl + arrows
noremap <C-Up> <C-W><Up>
noremap <C-Down> <C-W><Down>
noremap <C-Right> <C-W><Right>
noremap <C-Left> <C-W><Left>

" Completion
inoremap <C-@> <C-P>

" Insert inside pairs
inoremap () ()<Left>
inoremap '' ''<Left>
inoremap "" ""<Left>

" Open current line on GitHub
nnoremap <F9> :!echo `git url`/blob/`git rev-parse --abbrev-ref HEAD`/%\#L<C-R>=line('.')<CR> \| xargs x-www-browser<CR><CR>


" }}}
" Autodetect filetypes {{{ "

augroup vimrc
	au BufRead,BufNewFile bip.conf set ft=bip
	au BufRead,BufNewFile haproxy.cfg set ft=haproxy
	au BufRead,BufNewFile nginx.*,**/sites-available/*,**/sites-enabled/*,/etc/nginx/* set ft=nginx
	au BufRead,BufNewFile Capfile,Vagrantfile,Guardfile set ft=ruby
	au BufRead,BufNewFile *.dc set ft=dotclear
	au BufRead,BufNewFile *.wiki set ft=moin
	au BufRead,BufNewFile *.t2t set ft=txt2tags
	au BufRead,BufNewFile *.textile set ft=textile
	au BufRead,BufNewFile *.txt,*.md set ft=pandoc et tw=78
	au BufRead,BufNewFile *.ditaa set ft=ditaa
	au BufRead,BufNewFile Xdefaults set ft=xdefaults
	au BufRead,BufNewFile README,INSTALL,ChangeLog set ft=txt
	au BufRead,BufNewFile ~/.vim/doc/*.txt set ft=help nospell
	au BufRead,BufNewFile *.es6 set ft=javascript
	au BufRead,BufNewFile *.jade set ft=jade
	au BufRead,BufNewFile *.styl set ft=css et ts=2 sw=2
	au BufRead,BufNewFile *.coffee,Cakefile set ft=coffee et ts=2 sw=2
	au BufRead,BufNewFile Gomfile set ft=ruby
	au BufRead,BufNewFile *.go set ft=go fenc=utf-8
	au BufRead,BufNewFile *.ex,*.exs set ft=elixir
augroup END


" }}}
" Plugins {{{ "

" Increment Column :
vnoremap <c-a> :call IncrementColumn()<cr>

" Matchit
runtime! macros/matchit.vim

" SuperTab
let g:SuperTabDefaultCompletionType = "<C-P>"

" Vim-go
let g:go_fmt_command = "goimports"

" }}}
" Misc {{{ "

let g:browser = 'x-www-browser'

" Show trailing white-space
let ruby_space_errors = 1
let c_space_errors = 1
let javascript_space_errors = 1

source $HOME/.vim/abbrev.vim

" Comments
vmap / :s#^#//\ #<CR>gv:s#^//\ //\ ##<CR>
vmap # :s/^/#\ /<CR>gv:s/^#\ #\ //<CR>

" SudoW command to save a file as root
command! -bar -nargs=0 SudoW   :silent exe "write !sudo tee % >/dev/null"|silent edit!

" Some aliases
command! E :Explore
command! S :Sexplore
command! V :Vexplore

" Automatically give executable permissions if file begins with #! and contains '/bin/' in the path
function! MakeScriptExecuteable()
	if getline(1) =~ "^#!.*/bin/"
		silent !chmod +x <afile>
	endif
endfunction

" vimbits
au BufWritePost * call MakeScriptExecuteable()
vnoremap < <gv
vnoremap > >gv

" }}}
