#compdef bundle

local curcontext="$curcontext" state line _gems _opts ret=1

_arguments -C -A "-v" -A "--version" \
	'(- 1 *)'{-v,--version}'[display version information]' \
	'1: :->cmds' \
	'*:: :->args' && ret=0

case $state in
	cmds)
		cmds=( ${(f)"$(_call_program commands bundle help 2> /dev/null | sed -e '/ # /!d; s/^  bundle \(\w*\) .*# /\1:/')"} )
		_describe -t commands 'bundle command' cmds && ret=0
		;;
	args)
		case $line[1] in
			help)
				_values 'commands' $(bundle help | sed -e '/bundle/!d; s/.*bundle \([^ ]*\) .*/\1/' | tr '\n' ' ') && ret=0
				;;
			install)
				_arguments \
					'(--no-color)--no-color[disable colorization in output]' \
					'(--local)--local[do not attempt to connect to rubygems.org]' \
					'(--quiet)--quiet[only output warnings and errors]' \
					'(--gemfile)--gemfile=-[use the specified gemfile instead of Gemfile]:gemfile' \
					'(--system)--system[install to the system location]' \
					'(--deployment)--deployment[install using defaults tuned for deployment environments]' \
					'(--frozen)--frozen[do not allow the Gemfile.lock to be updated after this install]' \
					'(--path)--path=-[specify a different path than the system default]:path:_files' \
					'(--binstubs)--binstubs=-[generate bin stubs for bundled gems to ./bin]:directory:_files' \
					'(--without)--without=-[exclude gems that are part of the specified named group]:groups'
				ret=0
				;;
			exec)
				_normal && ret=0
				;;
			(open|show)
				_gems=( $(bundle show 2> /dev/null | sed -e '/^  \*/!d; s/^  \* \([^ ]*\) .*/\1/') )
				if [[ $_gems != "" ]]; then
					_values 'gems' $_gems && ret=0
				fi
				;;
			*)
				_opts=(  $(bundle help $line[1] | sed -e '/^  \[-/!d; s/^  \[\(-[^=]*\)=.*/\1/') )
				_opts+=( $(bundle help $line[1] | sed -e '/^  -/!d; s/^  \(-.\), \[\(-[^=]*\)=.*/\1 \2/') )
				if [[ $_opts != "" ]]; then
					_values 'options' $_opts && ret=0
				fi
				;;
		esac
		;;
esac

return ret
